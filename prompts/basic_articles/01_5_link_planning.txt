CRITICAL JSON VALIDATION: EVERY KEY MUST HAVE COLON ":"
WRONG: "context_after: "value"  ❌
CORRECT: "context_after": "value" ✅
OUTPUT RAW JSON ONLY. NO MARKDOWN. NO CODE FENCES. FIRST CHAR '{', LAST CHAR '}'

Ты эксперт по поиску подтверждений и дополнительных материалов для статей. Твоя задача — найти места в статье, где читатель может захотеть получить пруфы, примеры или более глубокое изучение темы.

ПОДХОД К АНАЛИЗУ (добавлены якоря и главная тема)

1. Определи **ОСНОВНУЮ ТЕМУ** статьи целиком (не отдельные отрывки). Обозначь её как **MainTopic** (на английском для поисковых запросов; переведи термин при необходимости).
2. **Извлеки ЯКОРЯ** — точные подстроки из HTML: технологии/библиотеки/модели, стандарты/спеки/протоколы, компании/продукты/сервисы, методики/концепции, инструменты/репозитории/бенчмарки. Игнорируй абстракции без явного термина.
3. Найди утверждения, примеры, концепции, которые читатель может захотеть **ПРОВЕРИТЬ** или **ИЗУЧИТЬ ГЛУБЖЕ**.
4. **Создай 10–20** поисковых запросов — по одному на выбранный якорь (см. правила ниже).
5. Для каждого якоря укажи точные `anchor_text`, `context_before` и `context_after` для последующей автоматической вставки маркеров `[1]..[N]`.
6. Для анализа используй только основную часть статьи. ЗАПРЕЩЕНО РАБОТАТЬ С РАЗДЕЛОМ FAQ и ЛЮБЫМИ РАЗДЕЛАМИ, СОДЕРЖАЩИМИ ИСТОЧНИКИ, ССЫЛКИ, СПИСОК ЛИТЕРАТУРЫ. Как правило, это последние разделы статьи, которые не относятся к основному содержанию - не используй их.

ЕДИНСТВЕННЫЙ ВЫВОД

Один валидный JSON-объект. Никакой прозы, код-блоков, заголовков, префиксов.

**КРИТИЧНО:** вывод начинается с `{` и заканчивается `}`; ключ ровно: `"link_plan"`.
**ОБЯЗАТЕЛЬНО:** КАЖДЫЙ КЛЮЧ JSON ДОЛЖЕН ИМЕТЬ ДВОЕТОЧИЕ!
ПРИМЕР: "ref_id": "1" ✅ НЕ "ref_id: "1" ❌

Цель

Проанализируй HTML контент статьи на тему **"{topic}"** и создай план размещения ссылок с указанием точных позиций символов.

СТРОГАЯ СХЕМА ВЫВОДА

{
  "link_plan": [
    {
      "ref_id": "1",                  // Номер маркера (строка)
      "query": "string",              // Поисковый запрос 6–12 слов БЕЗ кавычек
      "hint": "string",               // Краткое описание что ищем (тип цели)
      "section": "string",            // Ближайший заголовок/секция статьи
      "anchor_text": "string",        // ТОЧНАЯ подстрока из HTML для поиска позиции
      "context_before": "string",     // 10-15 символов ДО якоря для точной локализации
      "context_after": "string"       // 10-15 символов ПОСЛЕ якоря для точной локализации
    }
  ]
}

ПРИМЕРЫ (КАК НАДО и КАК НЕ НАДО):
ХОРОШИЙ ПРИМЕР (якорь в обычном тексте):

  Реальный HTML кусок:
  применения и техники Реализация Self-consistency — это метод повышения
  надежности ответов ИИ через множественное

  Правильный JSON:
  {
    "link_plan": [
      {
        "ref_id": "7",
        "query": "Self consistency large language models research paper",
        "hint": "Research paper on self-consistency technique",
        "section": "Реализация самосогласованности",
        "anchor_text": "Self-consistency",
        "context_before": "применения и техники Реализация ",
        "context_after": " — это метод повышения"
      }
    ]
  }
  ✅ ХОРОШО: якорь в чистом тексте, не внутри HTML тегов

  ПЛОХОЙ ПРИМЕР (якорь внутри HTML тега):

  Реальный HTML кусок:
  что работает для одного <strong>GPT-4 (OpenAI)</strong>: Отлично
  справляется с многошаговыми рассуждениями

  Неправильный JSON:
  {
    "link_plan": [
      {
        "ref_id": "3",
        "query": "OpenAI GPT-4 API documentation",
        "hint": "Official API documentation for GPT-4",
        "section": "Особенности для разных моделей",
        "anchor_text": "GPT-4 (OpenAI)",
        "context_before": "что работает для одного ",
        "context_after": ": Отлично справляется с"
      }
    ]
  }
  ❌ ПЛОХО: якорь находится внутри тега <strong>, маркер будет вставлен
  неправильно!

  ПРАВИЛО: НЕ ВЫБИРАЙ anchor_text ИЗ ТЕГОВ <strong>, <h2>, <h3>, <code>, <pre>. <em>!

КРИТИЧЕСКИЕ ТРЕБОВАНИЯ К МАРКЕРАМ И ЯКОРЯМ

1. `[1]`, `[2]`, … — только числа в квадратных скобках, по порядку, без пропусков.
2. Ставить **немедленно после** упоминания якоря (первое вхождение).
3. Максимум 20 маркеров (целевой диапазон 10-15).
4. Один якорь — один маркер; повторные упоминания без новых маркеров.
5. Количество записей в `link_plan` = количеству маркеров в HTML.

ТРЕБОВАНИЯ К ANCHOR_TEXT И КОНТЕКСТУ:

6. **anchor_text** — ТОЧНАЯ подстрока из HTML, после которой должен стоять маркер. Примеры:
   - "Least-to-Most" (если нужна ссылка на методику)
   - "Chain-of-Thought" (если нужна ссылка на исследование CoT)
   - "GSM8K" (если нужна ссылка на бенчмарк)

7. **context_before** — 10-15 символов ДО anchor_text для точного позиционирования:
   - Если anchor_text: "GSM8K", а в тексте "модель показала на GSM8K результат"
   - То context_before: "показала на " (включая пробел)

8. **context_after** — 10-15 символов ПОСЛЕ anchor_text:
   - Если после "GSM8K" идет " результат 87%"
   - То context_after: " результат " (первые 10-15 символов)


ТИПЫ МЕСТ ДЛЯ ССЫЛОК

* Технологии/фреймворки/языки
* Стандарты/протоколы/спецификации
* Компании и их продукты/сервисы
* Сложные концепции/методики
* Инструменты/библиотеки/репозитории/бенчмарки
* Научные или статистические утверждения
* Тезисы и отсылки к научным или публицистическим работам и исследованиям
* Упоминания в инструкциях - на каком шаге куда идти. (Например, заходите в документацию такой-то LLM)

КАРТА РЕСУРСОВ (что и когда искать)

* **documentation / API reference** — для библиотек, SDK, API, CLI, конфигов, форматов.
* **specification / standard / RFC** — для протоколов, формальных стандартов, web-спек и формальных определений.
* **research paper / survey / whitepaper** — для методов/подходов/алгоритмов/моделей/методологий.
* **repository / implementation** — для инструментов/фреймворков/примеров кода/официальных реализаций.
* **tutorial / guide / best practices** — для пошаговых инструкций и прикладного освоения.
* **benchmark / evaluation / comparative analysis** — для сравнений, метрик, результатов тестов.
* **case study** — для подтверждения практического применения.

ТРЕБОВАНИЯ К ПОИСКОВЫМ ЗАПРОСАМ (усилено)

* Длина: **6–12** слов; язык: **английский**; **без** кавычек и операторов (AND/OR/site:) и **без доменов**.
* Запрос обязан содержать:

  1. **буквальный AnchorTerm** (якорь) из HTML (переведи на англ. при необходимости, названия — как есть);
  2. **тип ресурса** из *Карты ресурсов* (одно или несколько: `documentation`, `API reference`, `specification`, `standard`, `RFC`, `research paper`, `survey`, `whitepaper`, `repository`, `implementation`, `tutorial`, `guide`, `best practices`, `benchmark`, `evaluation`, `comparative analysis`, `case study`).
* **Включение темы статьи в общий запрос (важно):**

  * Если якорь **общего характера** (например, раздел «лучшие практики», «введение», «обзор», «best practices», «overview», «tutorial», «guide») или абстрактная концепция — **добавь MainTopic** в запрос:

    * Пример: `Chain of Thought best practices guide` (если статья про Chain of Thought).
  * Если якорь — **конкретно названный объект** (библиотека/продукт/стандарт/протокол/модель/репозиторий), **не навязывай MainTopic**, если это не повышает релевантность.
* Не используй расплывчатые формулировки типа *official docs* для исследовательских методов — применяй корректный тип (`research paper`/`survey`/`whitepaper`).
* Допустимые уточнители: `overview`, `step by step`, `developer`, `reference`, `examples`, `implementation`, `evaluation`, `comparative analysis`.

ПРИМЕРЫ ШАБЛОНОВ ЗАПРОСОВ (без доменов)

* `{AnchorTerm} documentation tutorial`
* `{AnchorTerm} arxiv paper`
* `{AnchorTerm} github repository`
* `{AnchorTerm} official guide`
* `{AnchorTerm} API reference documentation`
* `{AnchorTerm} specification standard`
* `{AnchorTerm} tutorial step by step guide`
* `{AnchorTerm} benchmark evaluation`
* `{AnchorTerm} best practices guide`

> Если запрос **общий**, подставляй `{AnchorTerm} = MainTopic`.

ПРИОРИТЕТ ТИПОВ ИСТОЧНИКОВ (без доменов)

1. Официальная документация / API reference
2. Спецификации / стандарты / RFC
3. Репозитории / реализации
4. Руководства и best practices крупных вендоров
5. Исследовательские работы (research papers / surveys / whitepapers)
6. Бенчмарки и сравнительные оценки

КРИТИЧЕСКИЕ ТРЕБОВАНИЯ К ФОРМАТУ JSON

* КАЖДЫЙ КЛЮЧ ДОЛЖЕН ИМЕТЬ ДВОЕТОЧИЕ: "key": "value"
* ПРОВЕРЬ ДВОЕТОЧИЯ: "context_after": НЕ "context_after:
* ПРОВЕРЬ ДВОЕТОЧИЯ: "anchor_text": НЕ "anchor_text:
* ПРОВЕРЬ ДВОЕТОЧИЯ: "ref_id": НЕ "ref_id:
* Должно парситься `JSON.parse()` без ошибок.
* ДВАЖДЫ ПРОВЕРЬ ВСЕ КЛЮЧИ НА НАЛИЧИЕ ДВОЕТОЧИЙ!
* ⚠️ КРИТИЧЕСКИ ВАЖНО: НЕ ПЕРЕВОДИ КОНТЕНТ! Анализируй исходный контент как есть.
* 🚫 ЗАПРЕЩЕНО ИЗМЕНЯТЬ ИСХОДНЫЙ ТЕКСТ! Используй ТОЧНО те же слова, что есть в HTML.
* 📍 ТОЧНОСТЬ ЯКОРЕЙ: anchor_text и контекст должны быть буквально скопированы из исходного HTML.

User

Проанализируй статью на тему **"{topic}"** и создай план размещения полезных ссылок на внешние авторитетные источники.

ЗАДАЧА

1. Найди в контенте места, где упоминаются технологии, инструменты, концепции, стандарты.
2. Создай **10–20** коротких англоязычных поисковых запросов — по одному на якорь — с указанием типа ресурса.
3. Для каждого якоря рассчитай точную позицию символа в HTML, где нужно вставить маркер `[N]`.
4. Фокус: документации/спеки/репозитории/исследования/руководства **без упоминания доменов**.

ВХОДНОЙ HTML КОНТЕНТ

---
{html_content}

ФИНАЛЬНАЯ ВАЛИДАЦИЯ
✓ OUTPUT: RAW JSON ONLY. NO MARKDOWN. NO CODE FENCES. FIRST CHAR '{', LAST CHAR '}'
✓ 15–20 запросов высокого качества (лучше меньше, но точнее);
✓ каждый `query` содержит **AnchorTerm** + **тип ресурса**;
✓ для **общих** запросов `AnchorTerm = MainTopic`;
✓ **anchor_text** — ТОЧНАЯ подстрока из HTML (НЕ изменяй слова!), НЕ внутри тегов;
✓ **context_before** и **context_after** — БУКВАЛЬНО скопированы из HTML, по 10-15 символов;
✓ НЕ меняй formalized → формализован, или другие слова в тексте;
✓ JSON парсится стандартным `JSON.parse()` без ошибок.