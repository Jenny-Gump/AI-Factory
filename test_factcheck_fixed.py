#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç —Ñ–∞–∫—Ç—á–µ–∫–∏–Ω–≥–∞ - –≤—ã–¥–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é
"""

import os
import openai
from dotenv import load_dotenv

load_dotenv()

def load_article():
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—å–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    article_path = "/Users/skynet/Desktop/AI DEV/Content-factory/output/claude_code_cli_step_by_step_guide_for_beginners/10_link_processing/article_with_links.html"
    with open(article_path, 'r', encoding='utf-8') as f:
        return f.read()

def fact_check_with_gemini(article_text):
    """–§–∞–∫—Ç—á–µ–∫–∏–Ω–≥ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ —á–µ—Ä–µ–∑ Gemini 2.5"""

    client = openai.OpenAI(
        base_url="https://openrouter.ai/api/v1",
        api_key=os.getenv("OPENROUTER_API_KEY"),
    )

    prompt = """
–¢—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä. –ò—Å–ø—Ä–∞–≤—å –í–°–ï —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ —ç—Ç–æ–π —Å—Ç–∞—Ç—å–µ –æ Claude Code CLI.

–ü–†–û–ë–õ–ï–ú–´ –ö–û–¢–û–†–´–ï –ù–£–ñ–ù–û –ò–°–ü–†–ê–í–ò–¢–¨:
1. –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ npm –ø–∞–∫–µ—Ç–∞
2. –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã CLI
3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º —Ñ–∞–π–ª–∞–º
4. –í—ã–¥—É–º–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

–ó–ê–î–ê–ß–ê:
- –ù–∞–π–¥–∏ –≤—Å–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏
- –ò—Å–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
- –ò—Å–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∏ –ø—É—Ç–µ–π
- –£–±–µ—Ä–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

–û–¢–í–ï–¢:
–í—ã–≤–µ–¥–∏ –ü–û–õ–ù–û–°–¢–¨–Æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é –≤ —Ç–æ–º –∂–µ HTML —Ñ–æ—Ä–º–∞—Ç–µ. –°–æ—Ö—Ä–∞–Ω–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É, —Å—Ç–∏–ª—å –∏ –æ–±—ä–µ–º, –Ω–æ –∏—Å–ø—Ä–∞–≤—å –≤—Å–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏.

–°–¢–ê–¢–¨–Ø:
"""

    try:
        response = client.chat.completions.create(
            model="google/gemini-2.5-flash-lite-preview-06-17",
            messages=[
                {"role": "user", "content": prompt + article_text}
            ],
            max_tokens=16000,  # –£–≤–µ–ª–∏—á–∏–ª –ª–∏–º–∏—Ç
            temperature=0.1
        )

        return response.choices[0].message.content

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Gemini: {e}")
        return None

def main():
    print("üîç –ó–∞–≥—Ä—É–∂–∞—é —Å—Ç–∞—Ç—å—é –¥–ª—è —Ñ–∞–∫—Ç—á–µ–∫–∏–Ω–≥–∞...")
    article = load_article()
    print(f"‚úÖ –°—Ç–∞—Ç—å—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {len(article)} —Å–∏–º–≤–æ–ª–æ–≤")

    print("\nü§ñ –û—Ç–ø—Ä–∞–≤–ª—è—é –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ–≤ –≤ Gemini 2.5...")
    result = fact_check_with_gemini(article)

    if result:
        print("\nüìù –ü–æ–ª—É—á–µ–Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è")
        print(f"–†–∞–∑–º–µ—Ä: {len(result)} —Å–∏–º–≤–æ–ª–æ–≤")

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        with open("/Users/skynet/Desktop/AI DEV/Content-factory/article_corrected.html", 'w', encoding='utf-8') as f:
            f.write(result)
        print("\nüíæ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ article_corrected.html")

        # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤
        print("\nüìÑ –ù–∞—á–∞–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–∏:")
        print("=" * 50)
        print(result[:1000] + "..." if len(result) > 1000 else result)
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∞–∫—Ç—á–µ–∫–∏–Ω–≥–µ")

if __name__ == "__main__":
    main()